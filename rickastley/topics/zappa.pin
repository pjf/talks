Add more
cloud

# (Pic?)
-- [images/lambda.png]

# AWS Lambda
--
"Serverless"
--
You write
an application
--
You give it
to Lambda
--
It runs as
needed
--
"40ms lifecycle"
--
1M free
requests/month
--
$0.0000002/request
thereafer
--
400,000GB-seconds
free compute/month
--
512MB RAM?
9.25 DAYS compute

# That's $6,000 USD of
# Twilio costs PER MONTH
# before AWS charges me
--
Essentially
free
--
Easy?
-- [images/quickstart.png]

# 14 pages for the 'quickstart'
--
No attention
span
--
API Gateway
--
IAM Services
--
Something with
S3?
-- [images/lolcommit-rr.jpg]

# You can tell from my lolcommits
# that I'm not having fun
-- [images/zappa.jpg]

# Thank goodness for Zappa
--
Basically
magic

# Lets you deploy, at scale,
# technologies you don't understand.
--
Write a
flask app
--
Zappa does
heavy lifting
-- [font=monospace 50px][text-align=left]
from flask import Flask, request
app = Flask(__name__)

from twilio import twiml
-- [font=monospace 50px][text-align=left]
tunes = [
    None,   # Zero is always the menu
    {
        'src': "https://www.youtube.com/watch?v=b1WWpKEPdT4",
        'description': "Eight bit",
        'by': "Kita Khyber",
        'url': "https://dl.dropboxusercontent.com/u/9702672/music/8-Bit%20Rick%20Roll.mp3",
    },
    {
        'src': "https://www.youtube.com/watch?v=q-9KqwCFDJs",
        'description': "Dubstep",
        'by': "Crystalize",
        'url': "https://dl.dropboxusercontent.com/u/9702672/music/Rick-Astley-Dubstep.mp3",
    },
-- [font=monospace 50px][text-align=left]
menu  = "Welcome to the national Rick Astley hotline. "
menu += "You may make your selection at any time.\\n"

for idx, song in enumerate(tunes):
    if song is None:
        continue

    menu += "To listen to {}".format(song['description'])

    if 'by' in song:
        menu += " by {}".format(song['by'])

    menu += ", press {}.\n".format(idx)

menu += "To hear these options again, press zero.\\n"
menu += "If you do not wish to be rick-rolled, please hang up now."
-- [font=monospace 50px][text-align=left]

def play_tune(tune):

    response = twiml.Response()

    # By calling functions on gather, digits can be pressed during the song
    # playback *and* the menu afterwards.
    gather = response.gather(numDigits=1, timeout=10)
    gather.play(tune['url'])
    gather.say(menu)
    
    # Our goodbye triggers after gather times out.
    response.say(goodbye)

    return response

-- [font=monospace 50px][text-align=left]
@app.route("/", methods = ['GET', 'POST'])
def handle_call():

    selection = request.values.get('Digits')

    # No selection? Play the original
    if selection is None:
        return play_tune( _original )

    # Zero is always our menu
    elif selection == 0:
        return play_menu()

    # Here comes a funky remix!
    else:
        return play_tune( tunes[selection] )

-- [images/zappa.png]

-- [images/zappa-iam-roles.png]

-- [font=monospace 50px][text-align=left]

~/.aws/credentials

~/.aws/config

# Set up my AWS credentials

-- [images/zappa-y-u-no-work.png]

# You can have permissions in zip files.
# AWS cares. :(

-- [font=monospace 50px][text-align=left]

chmod -R a+r .

# Make sure everything is readable

-- [images/zappa-update.png]

--
üéàüéÜüçæ

# Finally got it working!
#
# Live demo of call?
# (Or later if doing live tail)
--
$ zappa status
-- [images/zappa-status.png]

--
$ zappa tail
-- [images/zappa-tail.png]

# Live tail
# `utils/filter`

--
Zappa is
seriously cool
